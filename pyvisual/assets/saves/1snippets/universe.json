{
    "connections": [
        {
            "dst_node_id": 11,
            "dst_port_id": "i_texture",
            "src_node_id": 9,
            "src_port_id": "o_output"
        },
        {
            "dst_node_id": 9,
            "dst_port_id": "i_input",
            "src_node_id": 13,
            "src_port_id": "o_output"
        },
        {
            "dst_node_id": 18,
            "dst_port_id": "i_t1",
            "src_node_id": 16,
            "src_port_id": "o_output"
        },
        {
            "dst_node_id": 18,
            "dst_port_id": "i_t2",
            "src_node_id": 17,
            "src_port_id": "o_output"
        },
        {
            "dst_node_id": 9,
            "dst_port_id": "i_transformUV",
            "src_node_id": 18,
            "src_port_id": "o_output"
        },
        {
            "dst_node_id": 17,
            "dst_port_id": "i_x",
            "src_node_id": 19,
            "src_port_id": "o_output"
        }
    ],
    "nodes": [
        {
            "custom_ports": [
                [
                    "i_time",
                    {
                        "default": null,
                        "dtype": "float",
                        "dtype_args": {},
                        "dummy": false,
                        "group": "default",
                        "hide": false,
                        "manual_input": true,
                        "name": "time",
                        "widgets": []
                    }
                ],
                [
                    "i_time_mask",
                    {
                        "default": null,
                        "dtype": "tex2d",
                        "dtype_args": {},
                        "dummy": false,
                        "group": "default",
                        "hide": true,
                        "manual_input": true,
                        "name": "time_mask",
                        "widgets": []
                    }
                ],
                [
                    "i_time_d0",
                    {
                        "default": null,
                        "dtype": "float",
                        "dtype_args": {
                            "default": 0.0
                        },
                        "dummy": false,
                        "group": "default",
                        "hide": true,
                        "manual_input": true,
                        "name": "time_d0",
                        "widgets": []
                    }
                ],
                [
                    "i_time_d1",
                    {
                        "default": null,
                        "dtype": "float",
                        "dtype_args": {
                            "default": 0.0
                        },
                        "dummy": false,
                        "group": "default",
                        "hide": true,
                        "manual_input": true,
                        "name": "time_d1",
                        "widgets": []
                    }
                ],
                [
                    "i_mouse",
                    {
                        "default": null,
                        "dtype": "vec2",
                        "dtype_args": {},
                        "dummy": false,
                        "group": "default",
                        "hide": false,
                        "manual_input": true,
                        "name": "mouse",
                        "widgets": []
                    }
                ]
            ],
            "id": 9,
            "manual_values": {
                "i_enable_time_mask": 0.0,
                "i_enabled": 1.0,
                "i_force_change": 42.0,
                "i_fragment_source": "\n#include <generate/base_time_mask.frag>\n// Shader downloaded and adapted from glslsandbox.com\n// URL: http://glslsandbox.com/e#41115.0\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n \n \n\nuniform vec2 mouse;\n;\n\n\n#define iterations 14\n#define formuparam2 0.79\n \n#define volsteps 5\n#define stepsize 0.290\n \n#define zoom 0.900\n#define tile   0.850\n#define speed2  0.10\n \n#define brightness 0.103\n#define darkmatter 0.400\n#define distfading 0.160\n#define saturation 0.800\n\n\n#define transverseSpeed zoom*2.0\n#define cloud 0.11 \n\n \nfloat triangle(float x, float a) { \n\tfloat output2 = 2.0*abs(  2.0*  ( (x/a) - floor( (x/a) + 0.5) ) ) - 1.0;\n\treturn output2;\n}\n \nfloat field(in vec3 p) {\t\n\tfloat strength = 7. + .03 * log(1.e-6 + fract(sin(pyvisualTime) * 4373.11));\n\tfloat accum = 0.;\n\tfloat prev = 0.;\n\tfloat tw = 0.;\t\n\n\tfor (int i = 0; i < 6; ++i) {\n\t\tfloat mag = dot(p, p);\n\t\tp = abs(p) / mag + vec3(-.5, -.8 + 0.1*sin(pyvisualTime*0.7 + 2.0), -1.1+0.3*cos(pyvisualTime*0.3));\n\t\tfloat w = exp(-float(i) / 7.);\n\t\taccum += w * exp(-strength * pow(abs(mag - prev), 2.3));\n\t\ttw += w;\n\t\tprev = mag;\n\t}\n\treturn max(0., 5. * accum / tw - .7);\n}\n\n\n\n\n\nvoid generateFrag() {\n\n   \n     \tvec2 uv2 = 2. * (vec2(pyvisualUV.x, 1.0 - pyvisualUV.y) * pyvisualResolution).xy / vec2(512) - 1.;\n\tvec2 uvs = uv2 * vec2(512)  / 512.;\n\t\n\tfloat pyvisualTime2 = pyvisualTime;               \n        float speed = speed2;\n        speed = .01 * cos(pyvisualTime2*0.02 + 3.1415926/4.0);          \n\t//speed = 0.0;\t\n    \tfloat formuparam = formuparam2;\n\t\n    \t//get coords and direction\t\n\tvec2 uv = uvs;\t\t       \n\t//mouse rotation\n\tfloat a_xz = 0.9;\n\tfloat a_yz = -.6;\n\tfloat a_xy = 0.9 + pyvisualTime*0.08;\t\n\t\n\tmat2 rot_xz = mat2(cos(a_xz),sin(a_xz),-sin(a_xz),cos(a_xz));\t\n\tmat2 rot_yz = mat2(cos(a_yz),sin(a_yz),-sin(a_yz),cos(a_yz));\t\t\n\tmat2 rot_xy = mat2(cos(a_xy),sin(a_xy),-sin(a_xy),cos(a_xy));\n\t\n\n\tfloat v2 =1.0;\t\n\tvec3 dir=vec3(uv*zoom,1.); \n\tvec3 from=vec3(0.0, 0.0,0.0);                               \n        from.x -= 5.0*(mouse.x-0.5);\n        from.y -= 5.0*(mouse.y-0.5);\n               \n               \n\tvec3 forward = vec3(0.,0.,1.);   \n\tfrom.x += transverseSpeed*(1.0)*cos(0.01*pyvisualTime) + 0.001*pyvisualTime;\n\tfrom.y += transverseSpeed*(1.0)*sin(0.01*pyvisualTime) +0.001*pyvisualTime;\n\tfrom.z += 0.003*pyvisualTime;\t\n\t\n\tdir.xy*=rot_xy;\n\tforward.xy *= rot_xy;\n\tdir.xz*=rot_xz;\n\tforward.xz *= rot_xz;\t\n\tdir.yz*= rot_yz;\n\tforward.yz *= rot_yz;\n\t\n\tfrom.xy*=-rot_xy;\n\tfrom.xz*=rot_xz;\n\tfrom.yz*= rot_yz;\n\t \n\t\n\t//zoom\n\tfloat zooom = (pyvisualTime2-3311.)*speed;\n\tfrom += forward* zooom;\n\tfloat sampleShift = mod( zooom, stepsize );\n\t \n\tfloat zoffset = -sampleShift;\n\tsampleShift /= stepsize; // make from 0 to 1\n\t\n\t//volumetric rendering\n\tfloat s=0.24;\n\tfloat s3 = s + stepsize/2.0;\n\tvec3 v=vec3(0.);\n\tfloat t3 = 0.0;\t\n\t\n\tvec3 backCol2 = vec3(0.);\n\tfor (int r=0; r<volsteps; r++) {\n\t\tvec3 p2=from+(s+zoffset)*dir;// + vec3(0.,0.,zoffset);\n\t\tvec3 p3=from+(s3+zoffset)*dir;// + vec3(0.,0.,zoffset);\n\t\t\n\t\tp2 = abs(vec3(tile)-mod(p2,vec3(tile*2.))); // tiling fold\n\t\tp3 = abs(vec3(tile)-mod(p3,vec3(tile*2.))); // tiling fold\t\t\n\t\t\n#ifdef cloud\n\t\tt3 = field(p3);\n#endif\n\t\t\n\t\tfloat pa,a=pa=0.;\n\t\tfor (int i=0; i<iterations; i++) {\n\t\t\tp2=abs(p2)/dot(p2,p2)-formuparam; // the magic formula\n\t\t\t//p=abs(p)/max(dot(p,p),0.005)-formuparam; // another interesting way to reduce noise\n\t\t\tfloat D = abs(length(p2)-pa); // absolute sum of average change\n\t\t\ta += i > 7 ? min( 12., D) : D;\n\t\t\tpa=length(p2);\n\t\t}\n\t\t\n\t\t\n\t\t//float dm=max(0.,darkmatter-a*a*.001); //dark matter\n\t\ta*=a*a; // add contrast\n\t\t//if (r>3) fade*=1.-dm; // dark matter, don't render near\n\t\t// brightens stuff up a bit\n\t\tfloat s1 = s+zoffset;\n\t\t// need closed form expression for this, now that we shift samples\n\t\tfloat fade = pow(distfading,max(0.,float(r)-sampleShift));\t\t\n\t\t//t3 += fade;\t\t\n\t\tv+=fade;\n\t       \t//backCol2 -= fade;\n\n\t\t// fade out samples as they approach the camera\n\t\tif( r == 0 )\n\t\t\tfade *= (1. - (sampleShift));\n\t\t// fade in samples as they approach from the distance\n\t\tif( r == volsteps-1 )\n\t\t\tfade *= sampleShift;\n\t\tv+=vec3(s1,s1*s1,s1*s1*s1*s1)*a*brightness*fade; // coloring based on distance\n\t\t\n\t\tbackCol2 += mix(.4, 1., v2) * vec3(1.8 * t3 * t3 * t3, 1.4 * t3 * t3, t3) * fade;\n\n\t\t\n\t\ts+=stepsize;\n\t\ts3 += stepsize;\t\t\n\t}//\u0444\u043e\u0440\n\t\t       \n\tv=mix(vec3(length(v)),v,saturation); //color adjust\t\n\n\tvec4 forCol2 = vec4(v*.01,1.);\t\n\t#ifdef cloud\n\tbackCol2 *= cloud;\n\t#endif\t\n\tbackCol2.b *= 1.8;\n\tbackCol2.r *= 0.05;\t\n\t\n\tbackCol2.b = 0.5*mix(backCol2.g, backCol2.b, 0.8);\n\tbackCol2.g = 0.0;\n\tbackCol2.bg = mix(backCol2.gb, backCol2.bg, 0.5*(cos(pyvisualTime*0.01) + 1.0));\t\n\tpyvisualOutColor = forCol2 + vec4(backCol2, 1.0);\n}\n",
                "i_id": "45233.0",
                "i_input": "",
                "i_interpolation": 1.0,
                "i_mouse": [
                    0.0,
                    0.0
                ],
                "i_sizeref": "",
                "i_time": 0.0,
                "i_time_d0": 0.0,
                "i_time_d1": 0.0,
                "i_time_mask": "",
                "i_transformUV": [
                    [
                        1.0,
                        0.0,
                        0.0,
                        0.0
                    ],
                    [
                        0.0,
                        1.0,
                        0.0,
                        0.0
                    ],
                    [
                        0.0,
                        0.0,
                        1.0,
                        0.0
                    ],
                    [
                        0.0,
                        0.0,
                        0.0,
                        1.0
                    ]
                ],
                "i_wrapping": 1.0,
                "o_enabled": 1.0,
                "o_output": ""
            },
            "type": "GLSLSandbox",
            "ui_data": {
                "collapsed": false,
                "pos": [
                    1898.0,
                    -354.0
                ],
                "selected": false
            }
        },
        {
            "custom_ports": [],
            "id": 11,
            "manual_values": {
                "i_texture": ""
            },
            "type": "Renderer",
            "ui_data": {
                "collapsed": false,
                "pos": [
                    2396.0,
                    -417.0
                ],
                "selected": false
            }
        },
        {
            "custom_ports": [],
            "id": 13,
            "manual_values": {
                "i_name": "ref_highres",
                "o_output": ""
            },
            "type": "GetTextureVar",
            "ui_data": {
                "collapsed": true,
                "pos": [
                    1459.0,
                    -348.0
                ],
                "selected": false
            }
        },
        {
            "custom_ports": [],
            "id": 16,
            "manual_values": {
                "i_uniform": 1.0,
                "i_x": 0.09000000357627869,
                "i_y": 0.09000000357627869,
                "o_output": [
                    [
                        0.09000000357627869,
                        0.0,
                        0.0,
                        0.0
                    ],
                    [
                        0.0,
                        0.09000000357627869,
                        0.0,
                        0.0
                    ],
                    [
                        0.0,
                        0.0,
                        1.0,
                        0.0
                    ],
                    [
                        0.0,
                        0.0,
                        0.0,
                        1.0
                    ]
                ]
            },
            "type": "Scale",
            "ui_data": {
                "collapsed": false,
                "pos": [
                    1774.0,
                    -561.0
                ],
                "selected": false
            }
        },
        {
            "custom_ports": [],
            "id": 17,
            "manual_values": {
                "i_x": 7.650000095367432,
                "i_y": 0.0,
                "o_output": [
                    [
                        1.0,
                        0.0,
                        0.0,
                        0.0
                    ],
                    [
                        0.0,
                        1.0,
                        0.0,
                        0.0
                    ],
                    [
                        0.0,
                        0.0,
                        1.0,
                        0.0
                    ],
                    [
                        31.60057830810547,
                        0.0,
                        0.0,
                        1.0
                    ]
                ]
            },
            "type": "Translate",
            "ui_data": {
                "collapsed": false,
                "pos": [
                    1505.0,
                    -543.0
                ],
                "selected": false
            }
        },
        {
            "custom_ports": [],
            "id": 18,
            "manual_values": {
                "i_t1": [
                    [
                        1.0,
                        0.0,
                        0.0,
                        0.0
                    ],
                    [
                        0.0,
                        1.0,
                        0.0,
                        0.0
                    ],
                    [
                        0.0,
                        0.0,
                        1.0,
                        0.0
                    ],
                    [
                        0.0,
                        0.0,
                        0.0,
                        1.0
                    ]
                ],
                "i_t2": [
                    [
                        1.0,
                        0.0,
                        0.0,
                        0.0
                    ],
                    [
                        0.0,
                        1.0,
                        0.0,
                        0.0
                    ],
                    [
                        0.0,
                        0.0,
                        1.0,
                        0.0
                    ],
                    [
                        0.0,
                        0.0,
                        0.0,
                        1.0
                    ]
                ],
                "o_output": [
                    [
                        0.09000000357627869,
                        0.0,
                        0.0,
                        0.0
                    ],
                    [
                        0.0,
                        0.09000000357627869,
                        0.0,
                        0.0
                    ],
                    [
                        0.0,
                        0.0,
                        1.0,
                        0.0
                    ],
                    [
                        31.60057830810547,
                        0.0,
                        0.0,
                        1.0
                    ]
                ]
            },
            "type": "Dot",
            "ui_data": {
                "collapsed": false,
                "pos": [
                    1848.0,
                    -460.0
                ],
                "selected": false
            }
        },
        {
            "custom_ports": [],
            "id": 19,
            "manual_values": {
                "i_factor": 1.0,
                "i_mod": 0.0,
                "i_reset": 0.0,
                "o_output": 31.600577811164584
            },
            "type": "Time",
            "ui_data": {
                "collapsed": false,
                "pos": [
                    1224.0,
                    -561.0
                ],
                "selected": false
            }
        }
    ],
    "ui_data": {
        "offset": [
            837.0,
            -842.0
        ]
    }
}