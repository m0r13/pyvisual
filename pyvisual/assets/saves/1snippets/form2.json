{
    "connections": [
        {
            "dst_node_id": 20,
            "dst_port_id": "i_input",
            "src_node_id": 19,
            "src_port_id": "o_output"
        },
        {
            "dst_node_id": 23,
            "dst_port_id": "i_input",
            "src_node_id": 20,
            "src_port_id": "o_output"
        },
        {
            "dst_node_id": 30,
            "dst_port_id": "i_a",
            "src_node_id": 22,
            "src_port_id": "o_output"
        },
        {
            "dst_node_id": 21,
            "dst_port_id": "i_texture",
            "src_node_id": 23,
            "src_port_id": "o_output"
        },
        {
            "dst_node_id": 27,
            "dst_port_id": "i_v1",
            "src_node_id": 24,
            "src_port_id": "o_output"
        },
        {
            "dst_node_id": 26,
            "dst_port_id": "i_alpha",
            "src_node_id": 25,
            "src_port_id": "o_output"
        },
        {
            "dst_node_id": 31,
            "dst_port_id": "i_alpha",
            "src_node_id": 25,
            "src_port_id": "o_output"
        },
        {
            "dst_node_id": 29,
            "dst_port_id": "i_input",
            "src_node_id": 26,
            "src_port_id": "o_output"
        },
        {
            "dst_node_id": 25,
            "dst_port_id": "i_input",
            "src_node_id": 27,
            "src_port_id": "o_output"
        },
        {
            "dst_node_id": 36,
            "dst_port_id": "i_x",
            "src_node_id": 27,
            "src_port_id": "o_output"
        },
        {
            "dst_node_id": 27,
            "dst_port_id": "i_v0",
            "src_node_id": 28,
            "src_port_id": "o_output"
        },
        {
            "dst_node_id": 20,
            "dst_port_id": "i_time",
            "src_node_id": 30,
            "src_port_id": "o_out"
        },
        {
            "dst_node_id": 35,
            "dst_port_id": "i_input",
            "src_node_id": 31,
            "src_port_id": "o_output"
        },
        {
            "dst_node_id": 35,
            "dst_port_id": "i_enabled",
            "src_node_id": 36,
            "src_port_id": "o_out"
        },
        {
            "dst_node_id": 30,
            "dst_port_id": "i_b",
            "src_node_id": 35,
            "src_port_id": "o_output"
        }
    ],
    "nodes": [
        {
            "custom_ports": [],
            "id": 19,
            "manual_values": {
                "i_name": "ref_noise",
                "o_output": ""
            },
            "type": "GetTextureVar",
            "ui_data": {
                "collapsed": false,
                "pos": [
                    -2507.0,
                    1098.0
                ],
                "selected": false
            }
        },
        {
            "custom_ports": [
                [
                    "i_time",
                    {
                        "default": null,
                        "dtype": "float",
                        "dtype_args": {},
                        "dummy": false,
                        "group": "default",
                        "hide": false,
                        "manual_input": true,
                        "name": "time",
                        "widgets": []
                    }
                ],
                [
                    "i_time_mask",
                    {
                        "default": null,
                        "dtype": "tex2d",
                        "dtype_args": {},
                        "dummy": false,
                        "group": "default",
                        "hide": true,
                        "manual_input": true,
                        "name": "time_mask",
                        "widgets": []
                    }
                ],
                [
                    "i_time_d0",
                    {
                        "default": null,
                        "dtype": "float",
                        "dtype_args": {
                            "default": 0.0
                        },
                        "dummy": false,
                        "group": "default",
                        "hide": true,
                        "manual_input": true,
                        "name": "time_d0",
                        "widgets": []
                    }
                ],
                [
                    "i_time_d1",
                    {
                        "default": null,
                        "dtype": "float",
                        "dtype_args": {
                            "default": 0.0
                        },
                        "dummy": false,
                        "group": "default",
                        "hide": true,
                        "manual_input": true,
                        "name": "time_d1",
                        "widgets": []
                    }
                ],
                [
                    "i_mouse",
                    {
                        "default": null,
                        "dtype": "vec2",
                        "dtype_args": {},
                        "dummy": false,
                        "group": "default",
                        "hide": false,
                        "manual_input": true,
                        "name": "mouse",
                        "widgets": []
                    }
                ]
            ],
            "id": 20,
            "manual_values": {
                "i_enable_time_mask": 0.0,
                "i_enabled": 1.0,
                "i_force_change": 42.0,
                "i_fragment_source": "\n#include <generate/base_time_mask.frag>\n// Shader downloaded and adapted from glslsandbox.com\n// URL: http://glslsandbox.com/e#51568.0\n\n// Phisically Based Rendering\n//\n// @aa_debdeb(https://twitter.com/aa_debdeb)\n// 2018/11/21\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\n//#define MULTI_SAMPLING\n#define PI 3.14159265359\n\n//#extension GL_OES_standard_derivatives : enable\n\n\nuniform vec2 mouse;\n;\n\nfloat roundBox(vec3 p, vec3 size, float radius) {\n\tvec3 d = abs(p) - size;\n\treturn min(max(d.x, max(d.y, d.z)), 0.0) + length(max(d, 0.0)) - radius;\n}\n\nfloat sphere(vec3 p, float radius) {\n\treturn length(p) - radius;\n}\n\nvec3 rotateX(vec3 p, float radian) {\n\tfloat s = sin(-radian);\n\tfloat c = cos(-radian);\n\treturn vec3(p.x, c * p.y - s * p.z, s * p.y + c * p.z);\n}\n\nvec3 rotateY(vec3 p, float radian) {\n\tfloat s = sin(-radian);\n\tfloat c = cos(-radian);\n\treturn vec3(c * p.x + s * p.z, p.y, -s * p.x + c * p.z);\n}\n\nvec3 translate(vec3 p, vec3 offset) {\n\treturn p - offset;\n}\n\nfloat smoothBlah(float d1, float d2, float k) {\n\tfloat h = clamp(0.5 +  0.5 * (d2 - d1) / k, 0.0, 1.0);\n\treturn mix(d2, d1, h) - k * h * (1.0 - h);\n}\n\nfloat smoothSubtract(float d1, float d2, float k) {\n\tfloat h = clamp(0.5 - 0.5 * (d2 + d1) / k, 0.0, 1.0);\n\treturn mix(d2, -d1, h) + k * h * (1.0 - h);\n}\n\t\n\nfloat scene(vec3 p) {\n\tvec3 q = rotateX(rotateY(p, pyvisualTime * 0.1), pyvisualTime * 0.2);\n\treturn  smoothSubtract(\n\t\t\tsphere(translate(p, vec3(1.4 * sin(pyvisualTime * 1.4), 2.4 * sin(pyvisualTime * 3.2), 3.2 * sin(pyvisualTime * 1.9))), 2.5),\n\t\t\tsmoothBlah(\n\t\t\t\tsphere(translate(p, vec3(3.0 * sin(pyvisualTime * 2.5), 3.4 * sin(pyvisualTime * 1.8), 2.3 * sin(pyvisualTime * 4.2))), 1.5),\n\t\t\t\troundBox(q, vec3(1.5, 1.8, 2.4), 0.15),\n\t\t\t\t0.5),\n\t\t\t0.2\n\t\t);\n}\n\nvec3 normal(vec3 p) {\n\tfloat d = 0.001;\n\treturn normalize(vec3(\n\t\tscene(p + vec3(d, 0.0, 0.0)) - scene(p + vec3(-d, 0.0, 0.0)),\n\t\tscene(p + vec3(0.0, d, 0.0)) - scene(p + vec3(0.0, -d, 0.0)),\n\t\tscene(p + vec3(0.0, 0.0, d)) - scene(p + vec3(0.0, 0.0, -d))\n\t));\n}\n\nvec3 lightDir = normalize(vec3(1.0, 1.0, 1.0));\nfloat lightIntensity = 2.0;\nvec3 lightColor = vec3(1.0, 1.0, 0.95) * lightIntensity;\nfloat refractiveIndex = 1.5;\nfloat metallic = 0.8;\n\nvec3 diffuseColor = vec3(0.5, 0.5, 0.3);\nvec3 specularColor = vec3(1.0);\nvec3 ambientColor = vec3(0.1);\nvec3 F0 = vec3(0.5, 0.4, 0.3);\n\nfloat beckmannNormalDistribution(float m, float dotNH) {\n\tfloat d2 = dotNH * dotNH;\n\tfloat d4 = d2 * d2;\n\tfloat a = 4.0 * m * m * d4;\n\tfloat b = exp(-((1.0 - d2) / d2) / m);\n\treturn b / a;\n}\n\nfloat geometricAttenuation(float dotNH, float dotNL, float dotNV, float dotVH) {\n\tfloat d = 1.0 / dotVH;\n\tfloat a = dotNH * dotNL * d;\n\tfloat b = dotNH * dotNV * d;\n\treturn min(1.0, min(a, b));\n}\n\nvec3 schlickFresnel(vec3 f0, float dotLH) {\n\treturn f0 + (vec3(1.0) - f0) * pow((1.0 - dotLH), 5.0);\n}\n\nvec3 brdfCookTorrance(vec3 normal, vec3 lightDir, vec3 viewDir, float roughness) {\n\tfloat m = roughness * roughness;\n\t\n\tvec3 halfDir = normalize(lightDir + viewDir);\n\t\n\tfloat dotNL = dot(normal, lightDir);\n\tfloat dotNV = dot(normal, viewDir);\n\tfloat dotNH = dot(normal, halfDir);\n\tfloat dotLH = dot(lightDir, halfDir);\n\tfloat dotVH = dot(viewDir, halfDir);\n\t\n\tfloat D = beckmannNormalDistribution(m, dotNH);\n\tfloat G = geometricAttenuation(dotNH, dotNL, dotNV, dotVH);\n\tvec3 F = schlickFresnel(F0, dotLH);\n\t\n\treturn specularColor * lightColor * D * G * F / (4.0 * dotNL * dotNV);\n}\n\nvec3 specular(vec3 normal, vec3 lightDir, vec3 viewDir, float roughness) {\n\treturn specularColor * lightColor * brdfCookTorrance(normal, lightDir, viewDir, roughness) * max(0.0, dot(normal, lightDir));\n}\n\nfloat brdfLambert(vec3 normal, vec3 lightDir) {\n\treturn max(0.0, dot(normal, lightDir)) / PI;\n}\n\nvec3 diffuse(vec3 normal, vec3 lightDir) {\n\treturn diffuseColor * lightColor  * brdfLambert(normal, lightDir) * max(0.0, dot(normal, lightDir));\n}\n\nbool raymarch(vec3 origin, vec3 ray, out float t) {\n\tvec3 point = origin;\n\tt = 0.0;\n\tfor (int i = 0; i < 64; i++) {\n\t\tfloat d = scene(point);\n\t\tpoint += ray * d;\n\t\tt += d;\n\t\tif (d < 0.01) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nvoid perspective(vec2 st, vec3 position, vec3 target, vec3 vup, float vfov, float aspect, out vec3 origin, out vec3 ray) {\n    vec2 uv = st * 2.0 - 1.0;\n    float radian = vfov * PI / 180.0;\n    float h = tan(radian * 0.5);\n    float w = h * aspect;\n    vec3 front = normalize(target - position);\n    vec3 right = normalize(cross(front, normalize(vup)));\n    vec3 up = normalize(cross(right, front));\n    origin = position;\n    ray =  normalize(right * w * uv.x + up * h * uv.y + front); \n}\n\nvec3 sample(vec2 st) {\n\tvec3 origin = vec3(0.0, 0.0, 10.0);\n\tvec3 target = vec3(0.0, 0.0, 0.0);\n\tvec3 ray;\n\tperspective(st, origin, target, vec3(0.0, 1.0, 0.0), 60.0, pyvisualResolution.x / pyvisualResolution.y, origin, ray);\n\n\tfloat t;\n\tif(raymarch(origin, ray, t)) {\n\t\tvec3 normal = normal(origin + t * ray);\n\t\tvec3 viewDir = -ray;\n\t\treturn (1.0 - metallic) * diffuse(normal, lightDir) + metallic * specular(normal, lightDir, viewDir, 0.5) + ambientColor;\n\t}\n\treturn vec3(0.0);\n}\n\n\n\nvoid generateFrag() {\n\n\n\tvec2 st = (vec2(pyvisualUV.x, 1.0 - pyvisualUV.y) * pyvisualResolution).xy / pyvisualResolution.xy;\n\t#ifdef MULTI_SAMPLING\n\tvec3 c =  (sample(((vec2(pyvisualUV.x, 1.0 - pyvisualUV.y) * pyvisualResolution).xy + vec2( 0.25,  0.25)) / pyvisualResolution.xy) \n\t\t+   sample(((vec2(pyvisualUV.x, 1.0 - pyvisualUV.y) * pyvisualResolution).xy + vec2(-0.25, 0.25)) / pyvisualResolution.xy) \n\t\t+   sample(((vec2(pyvisualUV.x, 1.0 - pyvisualUV.y) * pyvisualResolution).xy + vec2( 0.25, -0.25)) / pyvisualResolution.xy) \n\t\t+   sample(((vec2(pyvisualUV.x, 1.0 - pyvisualUV.y) * pyvisualResolution).xy + vec2(-0.25, -0.25)) / pyvisualResolution.xy)) / 4.0;\n\t#else\n\tvec3 c = sample(st);\n\t#endif\n\tpyvisualOutColor = vec4(c, 1.0);\t\n}\n",
                "i_id": "51568.0",
                "i_input": "",
                "i_interpolation": 1.0,
                "i_mouse": [
                    0.0,
                    0.0
                ],
                "i_sizeref": "",
                "i_time": 0.0,
                "i_time_d0": 0.0,
                "i_time_d1": 0.0,
                "i_time_mask": "",
                "i_transformUV": [
                    [
                        1.0,
                        0.0,
                        0.0,
                        0.0
                    ],
                    [
                        0.0,
                        1.0,
                        0.0,
                        0.0
                    ],
                    [
                        0.0,
                        0.0,
                        1.0,
                        0.0
                    ],
                    [
                        0.0,
                        0.0,
                        0.0,
                        1.0
                    ]
                ],
                "i_wrapping": 1.0,
                "o_enabled": 1.0,
                "o_output": ""
            },
            "type": "GLSLSandbox",
            "ui_data": {
                "collapsed": false,
                "pos": [
                    -2283.0,
                    1186.0
                ],
                "selected": false
            }
        },
        {
            "custom_ports": [],
            "id": 21,
            "manual_values": {
                "i_texture": ""
            },
            "type": "Renderer",
            "ui_data": {
                "collapsed": false,
                "pos": [
                    -1379.0,
                    1055.0
                ],
                "selected": false
            }
        },
        {
            "custom_ports": [],
            "id": 22,
            "manual_values": {
                "i_factor": 0.05000000074505806,
                "i_mod": 0.0,
                "i_reset": 0.0,
                "o_output": 76.84979261861471
            },
            "type": "Time",
            "ui_data": {
                "collapsed": false,
                "pos": [
                    -2939.0,
                    1313.0
                ],
                "selected": false
            }
        },
        {
            "custom_ports": [
                [
                    "i_filter_mask",
                    {
                        "default": null,
                        "dtype": "tex2d",
                        "dtype_args": {},
                        "dummy": false,
                        "group": "default",
                        "hide": true,
                        "manual_input": true,
                        "name": "filter_mask",
                        "widgets": []
                    }
                ],
                [
                    "i_filter_mode",
                    {
                        "default": null,
                        "dtype": "int",
                        "dtype_args": {
                            "choices": [
                                "input",
                                "mask",
                                "filtered",
                                "input_filtered_masked",
                                "input_masked",
                                "filtered_masked"
                            ],
                            "default": 2.0
                        },
                        "dummy": false,
                        "group": "default",
                        "hide": true,
                        "manual_input": true,
                        "name": "filter_mode",
                        "widgets": []
                    }
                ],
                [
                    "i_filter_bg",
                    {
                        "default": null,
                        "dtype": "color",
                        "dtype_args": {
                            "default": [
                                0.0,
                                0.0,
                                0.0,
                                0.0
                            ]
                        },
                        "dummy": false,
                        "group": "default",
                        "hide": true,
                        "manual_input": true,
                        "name": "filter_bg",
                        "widgets": []
                    }
                ],
                [
                    "i_uHue",
                    {
                        "default": null,
                        "dtype": "float",
                        "dtype_args": {
                            "default": 0.0
                        },
                        "dummy": false,
                        "group": "default",
                        "hide": false,
                        "manual_input": true,
                        "name": "uHue",
                        "widgets": []
                    }
                ],
                [
                    "i_uSaturation",
                    {
                        "default": null,
                        "dtype": "float",
                        "dtype_args": {
                            "default": 1.0,
                            "range": [
                                0.0,
                                Infinity
                            ]
                        },
                        "dummy": false,
                        "group": "default",
                        "hide": false,
                        "manual_input": true,
                        "name": "uSaturation",
                        "widgets": []
                    }
                ],
                [
                    "i_uValue",
                    {
                        "default": null,
                        "dtype": "float",
                        "dtype_args": {
                            "default": 1.0,
                            "range": [
                                0.0,
                                Infinity
                            ]
                        },
                        "dummy": false,
                        "group": "default",
                        "hide": false,
                        "manual_input": true,
                        "name": "uValue",
                        "widgets": []
                    }
                ]
            ],
            "id": 23,
            "manual_values": {
                "i_advanced_filtering": 0.0,
                "i_enabled": 1.0,
                "i_filter_bg": [
                    0.0,
                    0.0,
                    0.0,
                    0.0
                ],
                "i_filter_mask": "",
                "i_filter_mode": 2.0,
                "i_force_change": 42.0,
                "i_input": "",
                "i_interpolation": 1.0,
                "i_sizeref": "",
                "i_transformUV": [
                    [
                        1.0,
                        0.0,
                        0.0,
                        0.0
                    ],
                    [
                        0.0,
                        1.0,
                        0.0,
                        0.0
                    ],
                    [
                        0.0,
                        0.0,
                        1.0,
                        0.0
                    ],
                    [
                        0.0,
                        0.0,
                        0.0,
                        1.0
                    ]
                ],
                "i_uHue": 0.0,
                "i_uSaturation": 1.0,
                "i_uValue": 1.0,
                "i_wrapping": 1.0,
                "o_enabled": 1.0,
                "o_output": ""
            },
            "type": "HSVAdjust",
            "ui_data": {
                "collapsed": false,
                "pos": [
                    -1758.0,
                    1221.0
                ],
                "selected": false
            }
        },
        {
            "custom_ports": [],
            "id": 24,
            "manual_values": {
                "i_enabled": 1.0,
                "i_per_minute": 20.0,
                "o_output": 0.0
            },
            "type": "PoissonTimer",
            "ui_data": {
                "collapsed": false,
                "pos": [
                    -2827.0,
                    1842.0
                ],
                "selected": false
            }
        },
        {
            "custom_ports": [],
            "id": 25,
            "manual_values": {
                "i_condition": 1.0,
                "i_duration": 0.20000000298023224,
                "i_input": 0.0,
                "o_output": 0.0
            },
            "type": "HoldBool",
            "ui_data": {
                "collapsed": false,
                "pos": [
                    -2391.0,
                    1756.0
                ],
                "selected": false
            }
        },
        {
            "custom_ports": [],
            "id": 26,
            "manual_values": {
                "i_a": 1.0,
                "i_alpha": 0.0,
                "i_b": 0.0,
                "o_output": 1.0
            },
            "type": "MixFloat",
            "ui_data": {
                "collapsed": false,
                "pos": [
                    -2160.0,
                    1650.0
                ],
                "selected": false
            }
        },
        {
            "custom_ports": [],
            "id": 27,
            "manual_values": {
                "i_v0": 0.0,
                "i_v1": 0.0,
                "o_output": 0.0
            },
            "type": "Or",
            "ui_data": {
                "collapsed": false,
                "pos": [
                    -2621.0,
                    1770.0
                ],
                "selected": false
            }
        },
        {
            "custom_ports": [],
            "id": 28,
            "manual_values": {
                "o_output": 0.0
            },
            "type": "InputEvent",
            "ui_data": {
                "collapsed": false,
                "pos": [
                    -2759.0,
                    1749.0
                ],
                "selected": false
            }
        },
        {
            "custom_ports": [],
            "id": 29,
            "manual_values": {
                "i_cutoff": 10.0,
                "i_enabled": 1.0,
                "i_input": 0.0,
                "i_order": 2.0,
                "o_output": 1.0193456213453151
            },
            "type": "LowpassFloat",
            "ui_data": {
                "collapsed": false,
                "pos": [
                    -1820.0,
                    1665.0
                ],
                "selected": false
            }
        },
        {
            "custom_ports": [],
            "id": 30,
            "manual_values": {
                "i_a": 0.0,
                "i_b": 0.0,
                "i_op": 0.0,
                "o_out": 76.85172718077807
            },
            "type": "BinaryOpFloat",
            "ui_data": {
                "collapsed": false,
                "pos": [
                    -2523.0,
                    1361.0
                ],
                "selected": false
            }
        },
        {
            "custom_ports": [],
            "id": 31,
            "manual_values": {
                "i_a": 0.0,
                "i_alpha": 0.0,
                "i_b": -0.10000000149011612,
                "o_output": 0.0
            },
            "type": "MixFloat",
            "ui_data": {
                "collapsed": false,
                "pos": [
                    -2990.0,
                    1515.0
                ],
                "selected": false
            }
        },
        {
            "custom_ports": [],
            "id": 35,
            "manual_values": {
                "i_cutoff": 10.0,
                "i_enabled": 1.0,
                "i_input": 0.0,
                "i_order": 2.0,
                "o_output": 0.0019345621633587375
            },
            "type": "LowpassFloat",
            "ui_data": {
                "collapsed": false,
                "pos": [
                    -2629.0,
                    1523.0
                ],
                "selected": false
            }
        },
        {
            "custom_ports": [],
            "id": 36,
            "manual_values": {
                "i_op": 3.0,
                "i_x": 0.0,
                "o_out": 1.0
            },
            "type": "UnaryOpFloat",
            "ui_data": {
                "collapsed": true,
                "pos": [
                    -2802.0,
                    1625.0
                ],
                "selected": false
            }
        }
    ],
    "ui_data": {
        "offset": [
            -3149.0,
            946.0
        ]
    }
}